"use strict";var s=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var c=Object.prototype.hasOwnProperty;var d=(r,e)=>{for(var t in e)s(r,t,{get:e[t],enumerable:!0})},f=(r,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of m(e))!c.call(r,n)&&n!==t&&s(r,n,{get:()=>e[n],enumerable:!(o=y(e,n))||o.enumerable});return r};var w=r=>f(s({},"__esModule",{value:!0}),r);var g={};d(g,{applyInferredRowFilters:()=>l,inferRowFilter:()=>u});module.exports=w(g);function l(r,e){let t=Q(r,e);return o=>o.where(n=>n.or(t.map(i=>n.and(i.map(([p,a])=>n(p,a===null?"is":"=",a))))))}function u(r,e){return Object.entries(Object.values(e).reduce((t,o)=>{let{isInPrimaryKey:n,name:i}=o;return n&&(t[i]=r[i]??null),t},{}))}function Q(r,e){return r.map(t=>u(t,e))}
//# sourceMappingURL=data:application/json;base64,